// Code generated by valuegenerator. DO NOT EDIT

package value

import (
	"strconv"
)

// Uint64 implements the value interface for the uint64 type
type Uint64 uint64

// Type returns the underlying type of the value as a string
func (u *Uint64) Type() string {
	return "uint64"
}

// Get returns the underlying value as an interface{}
func (u *Uint64) Get() interface{} {
	return uint64(*u)
}

// Set a value from a string
func (u *Uint64) Set(val string) error {
	r, err := strconv.ParseUint(val, 10, 64)
	if err == nil {
		*u = Uint64(r)
	}
	return err
}

// String returns the value as a string
func (u *Uint64) String() string {
	return strconv.FormatUint(uint64(*u), 10)
}

// Clone duplicates the Uint64 as a copy of the instance
func (u *Uint64) Clone() Value {
	ptr := new(Uint64)
	*ptr = *u
	return ptr
}

// Zero returns the zero value of the underlying primitive
func (u *Uint64) Zero() interface{} {
	ptr := new(uint64)
	return *ptr
}

// BindUint64 returns a new Uint64 with the underlying uint64 used for state.
func BindUint64(u *uint64) *Uint64 {
	return (*Uint64)(u)
}
