// Code generated by valuegenerator. DO NOT EDIT

package value

import (
	"strconv"
)

// Int8 implements the value interface for the int8 type
type Int8 int8

// Type returns the underlying type of the value as a string
func (i *Int8) Type() string {
	return "int8"
}

// Get returns the underlying value as an interface{}
func (i *Int8) Get() interface{} {
	return int8(*i)
}

// Set a value from a string
func (i *Int8) Set(val string) error {
	r, err := strconv.ParseInt(val, 10, 8)
	if err == nil {
		*i = Int8(r)
	}
	return err
}

// String returns the value as a string
func (i *Int8) String() string {
	return strconv.FormatInt(int64(*i), 10)
}

// Clone duplicates the Int8 as a copy of the instance
func (i *Int8) Clone() Value {
	ptr := new(Int8)
	*ptr = *i
	return ptr
}

// Zero returns the zero value of the underlying primitive
func (i *Int8) Zero() interface{} {
	ptr := new(int8)
	return *ptr
}

// BindInt8 returns a new Int8 with the underlying int8 used for state.
func BindInt8(i *int8) *Int8 {
	return (*Int8)(i)
}
