// Code generated by valuegenerator. DO NOT EDIT

package value

import (
	"strconv"
)

// Int64 implements the value interface for the int64 type
type Int64 int64

// Type returns the underlying type of the value as a string
func (i *Int64) Type() string {
	return "int64"
}

// Get returns the underlying value as an interface{}
func (i *Int64) Get() interface{} {
	return int64(*i)
}

// Set a value from a string
func (i *Int64) Set(val string) error {
	r, err := strconv.ParseInt(val, 0, 64)
	if err == nil {
		*i = Int64(r)
	}
	return err
}

// String returns the value as a string
func (i *Int64) String() string {
	return strconv.FormatInt(int64(*i), 10)
}

// Clone duplicates the Int64 as a copy of the instance
func (i *Int64) Clone() Value {
	ptr := new(Int64)
	*ptr = *i
	return ptr
}

// Zero returns the zero value of the underlying primitive
func (i *Int64) Zero() interface{} {
	ptr := new(int64)
	return *ptr
}

// BindInt64 returns a new Int64 with the underlying int64 used for state.
func BindInt64(i *int64) *Int64 {
	return (*Int64)(i)
}
