// Code generated by valuegenerator. DO NOT EDIT

package value

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func ptrToUint64(a uint64) *Uint64 {
	x := new(Uint64)
	*x = Uint64(a)
	return x
}

func uint64Ptr(a uint64) *uint64 {
	x := new(uint64)
	*x = a
	return x
}

func TestUint64_Type(t *testing.T) {
	a := new(Uint64)
	assert.Equal(t, "uint64", a.Type())
}

func TestUint64_Zero(t *testing.T) {
	a := new(uint64)
	b := new(Uint64)
	assert.Equal(t, *a, b.Zero())
}

func TestUint64_Clone(t *testing.T) {
	a := new(Uint64)
	b := a.Clone()
	assert.Equal(t, uint64(*a), b.Get())
	*a = Uint64(6)
	assert.NotEqual(t, uint64(*a), b.Get())
}

type TestUint64GetTest struct {
	name string
	a    *Uint64
	want interface{}
}

func TestUint64_Get(t *testing.T) {
	for _, st := range testUint64GetTestData {
		tt := st
		t.Run(tt.name, func(t *testing.T) {
			t.Parallel()
			got := tt.a.Get()
			assert.Equal(t, tt.want, got)
		})
	}
}

type TestUint64SetTest struct {
	name    string
	s       string
	a       *Uint64
	wantErr bool
}

func TestUint64_Set(t *testing.T) {
	for _, st := range testUint64SetTestData {
		tt := st
		t.Run(tt.name, func(t *testing.T) {
			t.Parallel()
			err := tt.a.Set(tt.s)
			if tt.wantErr {
				assert.Error(t, err)
			} else {
				assert.NoError(t, err)
			}
		})
	}
}

type TestUint64StringTest struct {
	name string
	a    *Uint64
	want string
}

func TestUint64_String(t *testing.T) {
	for _, st := range testUint64StringTestData {
		tt := st
		t.Run(tt.name, func(t *testing.T) {
			t.Parallel()
			got := tt.a.String()
			assert.Equal(t, tt.want, got)
		})
	}
}

type TestBindUint64Test struct {
	name string
	x    *uint64
	want *Uint64
}

func TestBindUint64(t *testing.T) {
	for _, st := range testBindUint64TestData {
		tt := st
		t.Run(tt.name, func(t *testing.T) {
			t.Parallel()
			got := BindUint64(tt.x)
			assert.Equal(t, tt.want, got)
		})
	}
}

func TestFactoryBind_Uint64(t *testing.T) {
	a := uint64(6)
	got := Bind(&a)
	err := got.Set("18446744073709551615")
	require.NoError(t, err)
	assert.NotEqual(t, uint64(6), got.Get())
	assert.Equal(t, uint64(18446744073709551615), got.Get())
}
