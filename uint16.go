// Code generated by valuegenerator. DO NOT EDIT

package value

import (
	"strconv"
)

// Uint16 implements the value interface for the uint16 type
type Uint16 uint16

// Type returns the underlying type of the value as a string
func (u *Uint16) Type() string {
	return "uint16"
}

// Get returns the underlying value as an interface{}
func (u *Uint16) Get() interface{} {
	return uint16(*u)
}

// Set a value from a string
func (u *Uint16) Set(val string) error {
	r, err := strconv.ParseUint(val, 0, 16)
	if err == nil {
		*u = Uint16(r)
	}
	return err
}

// String returns the value as a string
func (u *Uint16) String() string {
	return strconv.FormatUint(uint64(*u), 10)
}

// Clone duplicates the Uint16 as a copy of the instance
func (u *Uint16) Clone() Value {
	ptr := new(Uint16)
	*ptr = *u
	return ptr
}

// Zero returns the zero value of the underlying primitive
func (u *Uint16) Zero() interface{} {
	ptr := new(uint16)
	return *ptr
}

// BindUint16 returns a new Uint16 with the underlying uint16 used for state.
func BindUint16(u *uint16) *Uint16 {
	return (*Uint16)(u)
}
