// Code generated by valuegenerator. DO NOT EDIT

package value

import (
	"strconv"
)

// Int implements the value interface for the int type
type Int int

// Type returns the underlying type of the value as a string
func (i *Int) Type() string {
	return "int"
}

// Get returns the underlying value as an interface{}
func (i *Int) Get() interface{} {
	return int(*i)
}

// Set a value from a string
func (i *Int) Set(val string) error {
	r, err := strconv.ParseInt(val, 0, 32)
	if err == nil {
		*i = Int(r)
	}
	return err
}

// String returns the value as a string
func (i *Int) String() string {
	return strconv.FormatInt(int64(*i), 10)
}

// Clone duplicates the Int as a copy of the instance
func (i *Int) Clone() Value {
	ptr := new(Int)
	*ptr = *i
	return ptr
}

// Zero returns the zero value of the underlying primitive
func (i *Int) Zero() interface{} {
	ptr := new(int)
	return *ptr
}

// BindInt returns a new Int with the underlying int used for state.
func BindInt(i *int) *Int {
	return (*Int)(i)
}
